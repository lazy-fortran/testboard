name: Release on Tag

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: x86_64
            runner: ubuntu-22.04
            fpm_url: https://github.com/fortran-lang/fpm/releases/download/v0.12.0/fpm-0.12.0-linux-x86_64-gcc-12
          - arch: aarch64
            runner: ubuntu-22.04-arm
            fpm_url: https://github.com/fortran-lang/fpm/releases/download/v0.12.0/fpm-0.12.0-linux-aarch64-gcc-12
    name: Build binary for ${{ matrix.arch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gfortran make

      - name: Install fpm
        run: |
          if [ "${{ matrix.arch }}" = "x86_64" ]; then
            wget -q ${{ matrix.fpm_url }}
            chmod +x fpm-0.12.0-linux-${{ matrix.arch }}-gcc-12
            sudo mv fpm-0.12.0-linux-${{ matrix.arch }}-gcc-12 /usr/local/bin/fpm
          else
            # Build fpm from source for aarch64
            git clone --depth 1 --branch v0.12.0 https://github.com/fortran-lang/fpm.git
            cd fpm
            ./install.sh
            cd ..
            rm -rf fpm
          fi

      - name: Generate embedded templates
        run: make templates

      - name: Build testboard
        run: fpm build

      - name: Test binary
        run: fpm run testboard -- --help

      - name: Package binary
        run: |
          cp build/gfortran_*/app/testboard testboard-${{ matrix.arch }}
          sha256sum testboard-${{ matrix.arch }} > testboard-${{ matrix.arch }}.sha256

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: testboard-${{ matrix.arch }}-linux
          path: |
            testboard-${{ matrix.arch }}
            testboard-${{ matrix.arch }}.sha256

  create-release:
    needs: build
    runs-on: ubuntu-latest
    name: Create GitHub Release

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download x86_64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: testboard-x86_64-linux

      - name: Download aarch64 artifacts
        uses: actions/download-artifact@v4
        with:
          name: testboard-aarch64-linux

      - name: Create Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          VERSION="${{ github.ref_name }}"

          cat > release_notes.md << EOF
          # TestBoard ${VERSION}

          ## Binaries for Linux

          This release includes binaries for x86_64 and aarch64 Linux systems.

          **Build Information:**
          - Built on Ubuntu 22.04 (glibc 2.35)
          - Compiler: gfortran
          - Compatible with glibc â‰¥ 2.35

          **Available Architectures:**
          - x86_64 (amd64)
          - aarch64 (arm64)

          **Download:**

          For x86_64:
          \`\`\`bash
          curl -LO https://github.com/${{ github.repository }}/releases/download/${VERSION}/testboard-x86_64
          curl -LO https://github.com/${{ github.repository }}/releases/download/${VERSION}/testboard-x86_64.sha256
          sha256sum -c testboard-x86_64.sha256
          chmod +x testboard-x86_64
          ./testboard-x86_64 --help
          \`\`\`

          For aarch64:
          \`\`\`bash
          curl -LO https://github.com/${{ github.repository }}/releases/download/${VERSION}/testboard-aarch64
          curl -LO https://github.com/${{ github.repository }}/releases/download/${VERSION}/testboard-aarch64.sha256
          sha256sum -c testboard-aarch64.sha256
          chmod +x testboard-aarch64
          ./testboard-aarch64 --help
          \`\`\`

          **Building from source:**
          \`\`\`bash
          git clone https://github.com/${{ github.repository }}.git
          cd testboard
          git checkout ${VERSION}
          make templates
          fpm build
          fpm run
          \`\`\`
          EOF

          gh release create "${{ github.ref_name }}" \
            testboard-x86_64 \
            testboard-x86_64.sha256 \
            testboard-aarch64 \
            testboard-aarch64.sha256 \
            --title "Release ${{ github.ref_name }}" \
            --notes-file release_notes.md
